"0","# county population estimate 2023"
"0","combined_pop <- read_csv(here(""data_clean"", ""combined_pop.csv""))"
"1","[1mRows: [22m[34m3158[39m [1mColumns: [22m[34m15[39m
"
"1","[36mâ”€â”€[39m [1mColumn specification[22m [36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[39m
[1mDelimiter:[22m "",""
[31mchr[39m  (2): county, state
[32mdbl[39m (13): 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022
"
"1","
[36mâ„¹[39m Use `spec()` to retrieve the full column specification for this data.
[36mâ„¹[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.
"
"0","pop3_state <- readxl::read_xlsx(here(""data_raw"", ""pop3_state.xlsx""))"
"0",""
"0","# Clean the state names in pop3_state and convert them to two-letter codes"
"0","state_names_to_codes <- c(""Alabama"" = ""AL"", ""Alaska"" = ""AK"", ""Arizona"" = ""AZ"", ""Arkansas"" = ""AR"", "
"0","                          ""California"" = ""CA"", ""Colorado"" = ""CO"", ""Connecticut"" = ""CT"", ""Delaware"" = ""DE"", "
"0","                          ""Florida"" = ""FL"", ""Georgia"" = ""GA"", ""Hawaii"" = ""HI"", ""Idaho"" = ""ID"", "
"0","                          ""Illinois"" = ""IL"", ""Indiana"" = ""IN"", ""Iowa"" = ""IA"", ""Kansas"" = ""KS"", "
"0","                          ""Kentucky"" = ""KY"", ""Louisiana"" = ""LA"", ""Maine"" = ""ME"", ""Maryland"" = ""MD"", "
"0","                          ""Massachusetts"" = ""MA"", ""Michigan"" = ""MI"", ""Minnesota"" = ""MN"", "
"0","                          ""Mississippi"" = ""MS"", ""Missouri"" = ""MO"", ""Montana"" = ""MT"", ""Nebraska"" = ""NE"", "
"0","                          ""Nevada"" = ""NV"", ""New Hampshire"" = ""NH"", ""New Jersey"" = ""NJ"", ""New Mexico"" = ""NM"", "
"0","                          ""New York"" = ""NY"", ""North Carolina"" = ""NC"", ""North Dakota"" = ""ND"", ""Ohio"" = ""OH"", "
"0","                          ""Oklahoma"" = ""OK"", ""Oregon"" = ""OR"", ""Pennsylvania"" = ""PA"", ""Rhode Island"" = ""RI"", "
"0","                          ""South Carolina"" = ""SC"", ""South Dakota"" = ""SD"", ""Tennessee"" = ""TN"", ""Texas"" = ""TX"", "
"0","                          ""Utah"" = ""UT"", ""Vermont"" = ""VT"", ""Virginia"" = ""VA"", ""Washington"" = ""WA"", "
"0","                          ""West Virginia"" = ""WV"", ""Wisconsin"" = ""WI"", ""Wyoming"" = ""WY"", ""District of Columbia"" = ""DC"")"
"0",""
"0","# Remove the leading period and convert state names to codes"
"0","pop3_state$state <- sub(""^\\."", """", pop3_state$state)"
"0","pop3_state$state <- sapply(pop3_state$state, function(state_name) state_names_to_codes[state_name])"
"0",""
"0","# Rename columns for clarity and merging"
"0","colnames(pop3_state) <- c(""state"", ""total_state_pop_2023"")"
"0",""
"0","# Calculate the total 2022 state population within combined_pop"
"0","combined_pop <- combined_pop %>%"
"0","  group_by(state) %>%"
"0","  mutate(total_state_pop_2022 = sum(`2022`, na.rm = TRUE)) %>%"
"0","  ungroup()"
"0",""
"0","# Calculate each county's share of the 2022 state population"
"0","combined_pop <- combined_pop %>%"
"0","  mutate(`2022_share` = (`2022` / total_state_pop_2022) * 100)"
"0",""
"0","# Merge the 2023 state population data from pop3_state with combined_pop"
"0","combined_pop <- left_join(combined_pop, pop3_state, by = ""state"")"
"0",""
"0","# Calculate the 2023 population for each county based on its 2022 share"
"0","combined_pop <- combined_pop %>%"
"0","  mutate(`2023` = (`2022_share` / 100) * total_state_pop_2023)"
"0",""
"0","# Inspect the first few rows of the updated combined_pop dataframe"
"0","head(combined_pop)"
