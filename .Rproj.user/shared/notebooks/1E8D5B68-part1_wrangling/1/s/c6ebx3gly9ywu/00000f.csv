"0","# county population estimate 2010 - 2019"
"0","pop1 <- readxl::read_xlsx(here(""data_raw"", ""pop1.xlsx""))"
"0",""
"0","# county population estimate 2020 - 2022"
"0","pop2 <- readxl::read_xlsx(here(""data_raw"", ""pop2.xlsx""))"
"0",""
"0","# State name to code mapping"
"0","state_names_to_codes <- c(""Alabama"" = ""AL"", ""Alaska"" = ""AK"", ""Arizona"" = ""AZ"", ""Arkansas"" = ""AR"", "
"0","                          ""California"" = ""CA"", ""Colorado"" = ""CO"", ""Connecticut"" = ""CT"", ""Delaware"" = ""DE"", "
"0","                          ""Florida"" = ""FL"", ""Georgia"" = ""GA"", ""Hawaii"" = ""HI"", ""Idaho"" = ""ID"", ""Illinois"" = ""IL"", "
"0","                          ""Indiana"" = ""IN"", ""Iowa"" = ""IA"", ""Kansas"" = ""KS"", ""Kentucky"" = ""KY"", ""Louisiana"" = ""LA"", "
"0","                          ""Maine"" = ""ME"", ""Maryland"" = ""MD"", ""Massachusetts"" = ""MA"", ""Michigan"" = ""MI"", "
"0","                          ""Minnesota"" = ""MN"", ""Mississippi"" = ""MS"", ""Missouri"" = ""MO"", ""Montana"" = ""MT"", "
"0","                          ""Nebraska"" = ""NE"", ""Nevada"" = ""NV"", ""New Hampshire"" = ""NH"", ""New Jersey"" = ""NJ"", "
"0","                          ""New Mexico"" = ""NM"", ""New York"" = ""NY"", ""North Carolina"" = ""NC"", ""North Dakota"" = ""ND"", "
"0","                          ""Ohio"" = ""OH"", ""Oklahoma"" = ""OK"", ""Oregon"" = ""OR"", ""Pennsylvania"" = ""PA"", "
"0","                          ""Rhode Island"" = ""RI"", ""South Carolina"" = ""SC"", ""South Dakota"" = ""SD"", ""Tennessee"" = ""TN"", "
"0","                          ""Texas"" = ""TX"", ""Utah"" = ""UT"", ""Vermont"" = ""VT"", ""Virginia"" = ""VA"", ""Washington"" = ""WA"", "
"0","                          ""West Virginia"" = ""WV"", ""Wisconsin"" = ""WI"", ""Wyoming"" = ""WY"", ""District of Columbia"" = ""DC"")"
"0",""
"0","# Function to extract state code and clean county names"
"0","extract_and_clean <- function(df) {"
"0","  df$state <- sapply(df$county, function(county_with_state) {"
"0","    state_name <- str_extract(county_with_state, "",\\s*[^,]+$"") %>% "
"0","      sub("",\\s*"", """", .) %>% "
"0","      trimws()"
"0","    state_names_to_codes[state_name]"
"0","  })"
"0","  df$county <- sapply(df$county, function(county_with_state) {"
"0","    cleaned_name <- sub("" County.*"", """", county_with_state)"
"0","    cleaned_name <- sub(""^\\."", """", cleaned_name)"
"0","    str_extract(cleaned_name, ""^[^,]+"") %>% trimws()"
"0","  })"
"0","  df"
"0","}"
"0",""
"0","# Apply transformations to both dataframes"
"0","pop1 <- extract_and_clean(pop1)"
"0","pop2 <- extract_and_clean(pop2)"
"0",""
"0","# Merge the datasets by the cleaned 'county' and 'state' columns"
"0","combined_pop <- merge(pop1, pop2, by = c(""county"", ""state""), all = TRUE)"
"0",""
"0","# Check the first few rows of the combined dataset"
"0","head(combined_pop)"
